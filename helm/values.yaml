# values.yaml

replicaCount: 2

image:
  repository: 674622770595.dkr.ecr.us-east-1.amazonaws.com/sre-challenge
  pullPolicy: IfNotPresent
  tag: "latest"

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/scheme: "internal"
    alb.ingress.kubernetes.io/target-type: "ip"
    alb.ingress.kubernetes.io/healthcheck-path: /actuator/health
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "61"  # Frequência do health check
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "60"  # Timeout do health check
    alb.ingress.kubernetes.io/success-codes: "200-299"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/load-balancer-attributes: "idle_timeout.timeout_seconds=60"  # Configurações do ALB
    alb.ingress.kubernetes.io/subnets: "subnet-043be10d9c45a7b00, subnet-0e8b00c66b770a0f0"
    alb.ingress.kubernetes.io/security-groups: "sg-0d767ea4ef8151def"
  hosts:
    - host: 
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: sre-challenge-app-service
              port:
                number: 8080

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

env: []

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 1

hpa:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  cpuUtilization: 70  # Escala quando CPU passar de 70%
  memoryUtilization: 80 